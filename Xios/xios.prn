ZSM 4.4	Source file: XIOS     	14-Apr-2022  18:03:20	Page    1
MP/M-II Banked XIOS for RC2014

                                            ; Get processor, chip and general equates
                                            .z180
                             C              include z180hwr.inc
                             C  ;
                             C  ;========== Z180 Internal Interrupt Vectors ========
                             C  
                             C  ; The following vectors are offsets from the value 
                             C  ; loaded in IL, the Interrupt Vector Low register.
                             C  
  0000  =                    C  VINT1        equ   0		;External INT-1 pin
  0002  =                    C  VINT2        equ   2		;External INT-2 pin
  0004  =                    C  VPRT0        equ   4		;Timer 0
  0006  =                    C  VPRT1        equ   6		;Timer 1
  0008  =                    C  VDMA0        equ   8		;DMA Ch-0
  000A  =                    C  VDMA1        equ   0Ah		;DMA Ch-1
  000C  =                    C  VCSIO        equ   0Ch		;Clocked serial I/O
  000E  =                    C  VASC0        equ   0Eh		;Asynch. comms. Ch-0
  0010  =                    C  VASC1        equ   10h		;Asynch. comms. Ch-1
                             C  
                             C  ;========== Z180 System Control Registers ==========
                             C  ;NB These registers may be relocated to multiples of
                             C  ; 40H, by setting the IO Control Register (ICR = 3FH)
                             C  ; The addresses below are valid with ICR=0 (else they
                             C  ; are offsets from the ICR base value).
                             C  
  00C0  =                    C  BASEIO       equ   0C0h		; Base address Z180 
                             C  
                             C  ; ASCI Registers
                             C  
  00C0  =                    C  CNTLA0       equ   BASEIO+00H	; ASCI Control Reg A Ch0
  00C1  =                    C  CNTLA1       equ   BASEIO+01H	; ASCI Control Reg A Ch1
  00C2  =                    C  CNTLB0       equ   BASEIO+02H	; ASCI Control Reg B Ch0
  00C3  =                    C  CNTLB1       equ   BASEIO+03H	; ASCI Control Reg B Ch1
  00C4  =                    C  STAT0        equ   BASEIO+04H	; ASCI Status Reg Ch0
  00C5  =                    C  STAT1        equ   BASEIO+05H	; ASCI Status Reg Ch1
  00C6  =                    C  TDR0         equ   BASEIO+06H	; ASCI TX Data Reg Ch0
  00C7  =                    C  TDR1         equ   BASEIO+07H	; ASCI TX Data Reg Ch1
  00C8  =                    C  RDR0         equ   BASEIO+08H	; ASCI RX Data Reg Ch0
  00C9  =                    C  RDR1         equ   BASEIO+09H	; ASCI RX Data Reg Ch1
  00D2  =                    C  BRK0         equ   BASEIO+12H	; Break Control Reg Ch0
  00D3  =                    C  BRK1         equ   BASEIO+13H	; Break Control reg Ch1
                             C  
                             C  ; CSI/O Registers
                             C  
  00CA  =                    C  CNTR         equ   BASEIO+0AH	; CSI/O Control Reg
  00CB  =                    C  TRDR         equ   BASEIO+0BH	; CSI/O TX/RX Data Reg
                             C  
                             C  ; Timer Registers
                             C  
  00CC  =                    C  TMDR0L       equ   BASEIO+0Ch	; Timer Data Reg Ch0-Low
  00CD  =                    C  TMDR0H       equ   BASEIO+0Dh	; Timer Data Reg Ch0-High
  00CE  =                    C  RLDR0L       equ   BASEIO+0Eh	; Timer Reload Reg Ch0-Low
  00CF  =                    C  RLDR0H       equ   BASEIO+0Fh	; Timer Reload Reg Ch0-High
  00D0  =                    C  TCR          equ   BASEIO+10h	; Timer Control Reg
  00D4  =                    C  TMDR1L       equ   BASEIO+14h	; Timer Data Reg Ch1-Low
  00D5  =                    C  TMDR1H       equ   BASEIO+15h	; Timer Data Reg Ch1-High
  00D6  =                    C  RLDR1L       equ   BASEIO+16h	; Timer Reload Reg Ch1-Low
ZSM 4.4	Source file: XIOS     	14-Apr-2022  18:03:20	Page    2
MP/M-II Banked XIOS for RC2014

  00D7  =                    C  RLDR1H       equ   BASEIO+17h	; Timer Reload Reg Ch1-High
  00D8  =                    C  FRC          equ   BASEIO+18h	; Free-Running Counter
                             C  
                             C  ; DMA Registers
                             C  
  00E0  =                    C  SAR0L        equ   BASEIO+20h	; DMA Source Addr Reg Ch0-Low
  00E1  =                    C  SAR0H        equ   BASEIO+21h	; DMA Source Addr Reg Ch0-High
  00E2  =                    C  SAR0B        equ   BASEIO+22h	; DMA Source Addr Reg Ch0-B
  00E3  =                    C  DAR0L        equ   BASEIO+23h	; DMA Destn  Addr Reg Ch0-Low
  00E4  =                    C  DAR0H        equ   BASEIO+24h	; DMA Destn  Addr Reg Ch0-High
  00E5  =                    C  DAR0B        equ   BASEIO+25h	; DMA Destn  Addr Reg Ch0-B
  00E6  =                    C  BCR0L        equ   BASEIO+26h	; DMA Byte Count Reg Ch0-Low
  00E7  =                    C  BCR0H        equ   BASEIO+27h	; DMA Byte Count Reg Ch0-High
  00E8  =                    C  MAR1L        equ   BASEIO+28h	; DMA Memory Addr Reg Ch1-Low
  00E9  =                    C  MAR1H        equ   BASEIO+29h	; DMA Memory Addr Reg Ch1-High
  00EA  =                    C  MAR1B        equ   BASEIO+2Ah	; DMA Memory Addr Reg Ch1-B
  00EB  =                    C  IAR1L        equ   BASEIO+2Bh	; DMA I/O Addr Reg Ch1-Low
  00EC  =                    C  IAR1H        equ   BASEIO+2Ch	; DMA I/O Addr Reg Ch1-High
  00EE  =                    C  BCR1L        equ   BASEIO+2Eh	; DMA Byte Count Reg Ch1-Low
  00EF  =                    C  BCR1H        equ   BASEIO+2Fh	; DMA Byte Count Reg Ch1-High
  00F0  =                    C  DSTAT        equ   BASEIO+30h	; DMA Status Reg
  00F1  =                    C  DMODE        equ   BASEIO+31h	; DMA Mode Reg
  00F2  =                    C  DCNTL        equ   BASEIO+32h	; DMA/WAIT Control Reg
                             C  
                             C  ; System Control Registers
                             C  
  00DF  =                    C  CCR          equ  BASEIO+1Fh	; CPU control reg.
  00F3  =                    C  IL           equ  BASEIO+33h	; INT Vector Low Reg
  00F4  =                    C  ITC          equ  BASEIO+34h	; INT/TRAP Control Reg
  00F6  =                    C  RCR          equ  BASEIO+36h	; Refresh Control Reg
  00F8  =                    C  CBR          equ  BASEIO+38h	; MMU Common Base Reg
  00F9  =                    C  BBR          equ  BASEIO+39h	; MMU Bank Base Reg
  00FA  =                    C  CBAR         equ  BASEIO+3Ah	; MMU Common/Bank Area Reg
  00FE  =                    C  OMCR         equ  BASEIO+3Eh	; Operation Mode Control Reg
  00FF  =                    C  ICR          equ  BASEIO+3Fh	; I/O Control Reg
                             C  
                             C  ; **********************************************************************
                             C  ; Serial status register bits
                             C  
  0007  =                    C  ST_RDRF      equ   7              ;Receive data register Full
  0001  =                    C  ST_TDRE      equ   1              ;Transmit data register empty
                             C  
                             C  ; **********************************************************************
                             C  ; CF registers
  0010  =                    C  CF_DATA      equ   10h
  0011  =                    C  CF_FEATURES  equ   11h
  0011  =                    C  CF_ERROR     equ   11h
  0012  =                    C  CF_SECCOUNT  equ   12h
  0013  =                    C  CF_SECTOR    equ   13h
  0014  =                    C  CF_CYL_LOW   equ   14h
  0015  =                    C  CF_CYL_HI    equ   15h
  0016  =                    C  CF_HEAD      equ   16h
  0017  =                    C  CF_STATUS    equ   17h
  0017  =                    C  CF_COMMAND   equ   17h
  0013  =                    C  CF_LBA0      equ   13h
  0014  =                    C  CF_LBA1      equ   14h
  0015  =                    C  CF_LBA2      equ   15h
ZSM 4.4	Source file: XIOS     	14-Apr-2022  18:03:20	Page    3
MP/M-II Banked XIOS for RC2014

  0016  =                    C  CF_LBA3      equ   16h
                             C  
                             C  ;CF Features
  0001  =                    C  CF_8BIT      equ   1
  0082  =                    C  CF_NOCACHE   equ   082h
                             C  ;CF Commands
  0020  =                    C  CF_READ_SEC  equ   020h
  0030  =                    C  CF_WRITE_SEC equ   030h
  00EF  =                    C  CF_SET_FEAT  equ   0EFh
                             C  
                             C  ; **********************************************************************
                             C  ; PIO I/O Addresses
                             C  
  004C  =                    C  PIOAD        equ   4Ch              ; Data port A
  004D  =                    C  PIOBD        equ   4Dh              ; Data port B
  004E  =                    C  PIOAC        equ   4Eh              ; Control port A
  004F  =                    C  PIOBC        equ   4Fh              ; Control port B
                             C  
                                
                                ;******************************************************************************
                                ;******************************************************************************
                                ;**                                                                          **
                                ;**                  M P / M  I I   B a n k e d   X I O S                    **
                                ;**                            by Tadeusz Pycio                              **
                                ;**                                                                          **
                                ;******************************************************************************
                                ;******************************************************************************
                                ;  Build:   ZSM XIOS,XIOS=XIOS.Z80                                
                                ;           LINK BNKXIOS=XIOS[NR,OS]                              
                                ;
                                ;  Program uses snippets of code written by Hector Peraza, Rienk H. Koolstra, 
                                ;  and Digital Research.
                                ;
                                ;  Revision History:                                              
                                ;  Rev    Date         Author                Comments             
                                ;  0.2    23-09-2021   Tadeusz Pycio         Created 
                                ;  1.0    04-12-2021   Tadeusz Pycio         Public release     
                                ;  1.1    14-04-2022   Tadeusz Pycio         Rebuilding interrupts
                                ;                                                                 
                                ;******************************************************************************
                                
  0000  =                       false       equ   0
  FFFF  =                       true        equ   -1
                                
  0000  =                       debug       equ   false
                                
  0080  =                       tpabuf      equ   80h               ; Default I/O buffer and command line storage
                                
                                ; Ascii Character Equates
  000A  =                       LF          equ   0Ah         ; Line Feed
  000D  =                       CR          equ   0Dh         ; Carriage Return
                                
                                
                                            cseg
                                
                                ; Jump vectors for individual subroutines
                                
ZSM 4.4	Source file: XIOS     	14-Apr-2022  18:03:20	Page    4
MP/M-II Banked XIOS for RC2014

  0000' C3 004B'                XIOS:       jp    commonbase        ; CommonBase, Terminate process
  0003' C3 0072'                wboot:      jp    warmstart         ; Warm Boot, Terminate process
  0006' C3 01B5'                            jp    const             ; Check for console char ready
  0009' C3 01BC'                            jp    conin             ; Read console character in
  000C' C3 01C3'                            jp    conout            ; Write console character out
  000F' C3 0246'                            jp    list              ; Write list character out
  0012' C3 01CF'                            jp    rtnempty          ; not used by MP/M II
  0015' C3 01CF'                            jp    rtnempty          ; not used by MP/M II
  0018' C3 02F9'                            jp    home              ; Move to track 00
  001B' C3 0317'                            jp    seldsk            ; Select disk drive
  001E' C3 0305'                            jp    settrk            ; Set track number
  0021' C3 030A'                            jp    setsec            ; Set sector number
  0024' C3 0312'                            jp    setDMA            ; Set DMA address
  0027' C3 033F'                            jp    read              ; Read selected sector
  002A' C3 0352'                            jp    write             ; Write selected sector
  002D' C3 01CF'                            jp    rtnempty          ; not used by MP/M II
  0030' C3 030F'                            jp    sectran           ; Sector translate subroutine
                                
  0033' C3 0272'                            jp    selmemory         ; Select memory
  0036' C3 0252'                            jp    polldevice        ; Poll device
  0039' C3 0282'                            jp    startclock        ; Start clock
  003C' C3 0288'                            jp    stopclock         ; Stop clock
  003F' C3 028D'                            jp    exitregion        ; Exit critical region
  0042' C3 024F'                            jp    maxconsole        ; Maximum console number
  0045' C3 0527'                            jp    systeminit        ; System initialization
  0048' 00 00 00                            db    0,0,0             ; force use of internal dispatch @ idle
                                ;           jp    idle
                                
                                ; -----------------------------------------------------------------------------
  004B' C3 0072'                commonbase: jp    coldstart
  004E' C3 0000                 swtuser:    jp    $-$
  0051' C3 0000                 swtsys:     jp    $-$
  0054' C3 0000                 pdisp:      jp    $-$
  0057' C3 0000                 xdos:       jp    $-$
  005A' 0000                    sysdat:     dw    $-$
                                ; -----------------------------------------------------------------------------
                                ; Padding string, exactly 4 bytes long, to make sure that the interrupt
                                ; table begins on an 32-byte boundary
                                
  005C' 5A 31 38 30                         db    "Z180"
                                
                                ; Z180 interrupt table, must begin in a 32-byte boundary
                                
  0060' 02E1'                   itbl:       dw    badint            ;External INT-1 pin
  0062' 02E1'                               dw    badint            ;External INT-2 pin
  0064' 0294'                               dw    timerint          ;Timer 0
  0066' 02E1'                               dw    badint            ;Timer 1
  0068' 02E1'                               dw    badint            ;DMA Ch-0
  006A' 02E1'                               dw    badint            ;DMA Ch-1
  006C' 02E1'                               dw    badint            ;Clocked serial I/O
  006E' 02E1'                               dw    badint            ;Asynch. comms. Ch-0
  0070' 02E1'                               dw    badint            ;Asynch. comms. Ch-1
                                ; -----------------------------------------------------------------------------
  0072'                         coldstart:
  0072' 0E 00                   warmstart:  ld    c,0
  0074' C3 0057'                            jp    xdos              ; system reset, terminate process
                                
ZSM 4.4	Source file: XIOS     	14-Apr-2022  18:03:20	Page    5
MP/M-II Banked XIOS for RC2014

                                ;==============================================================================
                                ;	D I S K   O R G A N I S A T I O N   T A B L E S
                                ;==============================================================================
                                
  1000  =                       blksiz      equ   4096              ;MP/M allocation size
  0200  =                       hstsiz      equ   512               ;host disk sector size
  0020  =                       hstspt      equ   32                ;host disk sectors/trk
  0004  =                       hstblk      equ   hstsiz/128        ;MP/M sects/host buff
  0080  =                       cpmspt      equ   hstblk * hstspt   ;MP/M sectors/track
  0003  =                       secmsk      equ   hstblk-1          ;sector mask
                                
  0000  =                       wrall       equ   0                 ; write to allocated
  0001  =                       wrdir       equ   1                 ; write to directory
  0002  =                       wrual       equ   2                 ; write to unallocated
                                
                                ;==============================================================================
                                ; Disk parameter headers for disk 0 to 15
                                ;==============================================================================
                                
  0077' 0000  0000  0000        dpbase:     dw    0000h,0000h,0000h,0000h,dirbuf,dpb0,0000h,alv00
  007D' 0000  0527' 0177'       
  0083' 0000  05A7'             
  0087' 0000  0000  0000                    dw    0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv01
  008D' 0000  0527' 0186'       
  0093' 0000  06A8'             
  0097' 0000  0000  0000                    dw    0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv02
  009D' 0000  0527' 0186'       
  00A3' 0000  07A9'             
  00A7' 0000  0000  0000                    dw    0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv03
  00AD' 0000  0527' 0186'       
  00B3' 0000  08AA'             
  00B7' 0000  0000  0000                    dw    0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv04
  00BD' 0000  0527' 0186'       
  00C3' 0000  09AB'             
  00C7' 0000  0000  0000                    dw    0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv05
  00CD' 0000  0527' 0186'       
  00D3' 0000  0AAC'             
  00D7' 0000  0000  0000                    dw    0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv06
  00DD' 0000  0527' 0186'       
  00E3' 0000  0BAD'             
  00E7' 0000  0000  0000                    dw    0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv07
  00ED' 0000  0527' 0186'       
  00F3' 0000  0CAE'             
  00F7' 0000  0000  0000                    dw    0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv08
  00FD' 0000  0527' 0186'       
  0103' 0000  0DAF'             
  0107' 0000  0000  0000                    dw    0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv09
  010D' 0000  0527' 0186'       
  0113' 0000  0EB0'             
  0117' 0000  0000  0000                    dw    0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv10
  011D' 0000  0527' 0186'       
  0123' 0000  0FB1'             
  0127' 0000  0000  0000                    dw    0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv11
  012D' 0000  0527' 0186'       
  0133' 0000  10B2'             
  0137' 0000  0000  0000                    dw    0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv12
  013D' 0000  0527' 0186'       
ZSM 4.4	Source file: XIOS     	14-Apr-2022  18:03:20	Page    6
MP/M-II Banked XIOS for RC2014

  0143' 0000  11B3'             
  0147' 0000  0000  0000                    dw    0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv13
  014D' 0000  0527' 0186'       
  0153' 0000  12B4'             
  0157' 0000  0000  0000                    dw    0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv14
  015D' 0000  0527' 0186'       
  0163' 0000  13B5'             
  0167' 0000  0000  0000                    dw    0000h,0000h,0000h,0000h,dirbuf,dpbLast,0000h,alv15
  016D' 0000  0527' 0195'       
  0173' 0000  14B6'             
                                            
                                ; First drive has a reserved track for MP/M
                                
  0177' 0080                    dpb0:       dw    128               ;SPT - sectors per track
  0179' 05                                  db    5                 ;BSH - block shift factor
  017A' 1F                                  db    31                ;BLM - block mask
  017B' 01                                  db    1                 ;EXM - Extent mask
  017C' 07FB                                dw    2043              ; (2047-4) DSM - Storage size (blocks - 1)
  017E' 01FF                                dw    511               ;DRM - Number of directory entries - 1
  0180' F0                                  db    240               ;AL0 - 1 bit set per directory block
  0181' 00                                  db    0                 ;AL1 -            "
  0182' 0000                                dw    0                 ;CKS - DIR check vector size (DRM+1)/4 (0=fixed disk)
  0184' 0001                                dw    1                 ;OFF - Reserved tracks
                                
  0186' 0080                    dpb:        dw    128               ;SPT - sectors per track
  0188' 05                                  db    5                 ;BSH - block shift factor
  0189' 1F                                  db    31                ;BLM - block mask
  018A' 01                                  db    1                 ;EXM - Extent mask
  018B' 07FF                                dw    2047              ;DSM - Storage size (blocks - 1)
  018D' 01FF                                dw    511               ;DRM - Number of directory entries - 1
  018F' F0                                  db    240               ;AL0 - 1 bit set per directory block
  0190' 00                                  db    0                 ;AL1 -            "
  0191' 0000                                dw    0                 ;CKS - DIR check vector size (DRM+1)/4 (0=fixed disk)
  0193' 0000                                dw    0                 ;OFF - Reserved tracks
                                
                                ; Last drive is smaller because CF is never full 128MB
                                
  0195' 0080                    dpbLast:    dw    128               ;SPT - sectors per track
  0197' 05                                  db    5                 ;BSH - block shift factor
  0198' 1F                                  db    31                ;BLM - block mask
  0199' 01                                  db    1                 ;EXM - Extent mask
  019A' 01FF                                dw    511               ;DSM - Storage size (blocks - 1)  ; 511 = 2MB (for 128MB card)
  019C' 01FF                                dw    511               ;DRM - Number of directory entries - 1
  019E' F0                                  db    240               ;AL0 - 1 bit set per directory block
  019F' 00                                  db    0                 ;AL1 -            "
  01A0' 0000                                dw    0                 ;CKS - DIR check vector size (DRM+1)/4 (0=fixed disk)
  01A2' 0000                                dw    0                 ;OFF - Reserved tracks
                                
                                ; -----------------------------------------------------------------------------
                                ; output ASCII on console 0
                                
  01A4' 7E                      PutMsg:     ld    a,(hl)            ; Affects A, C, HL
  01A5' A7                                  and   a
  01A6' C8                                  ret   z                 ; Zero terminates
                                
  01A7' 4F                                  ld    c,a               ; Display 1 char.
  01A8' ED 38 C4                conoutA:    in0   a,(STAT0)         ; console 0 status
ZSM 4.4	Source file: XIOS     	14-Apr-2022  18:03:20	Page    7
MP/M-II Banked XIOS for RC2014

  01AB' CB 4F                               bit   ST_TDRE,a         ; tx empty?
  01AD' 28 F9                               jr    z,conoutA         ; No, so keep waiting
  01AF' ED 09 C6                            out0  (TDR0),c          ; Write byte to serial port
  01B2' 23                                  inc   hl
  01B3' 18 EF                               jr    PutMsg
                                
                                ; -----------------------------------------------------------------------------
                                ;	I / O   H A N D L E R S 
                                
  0002  =                       numcns      equ   2                 ; number of consoles
                                
  0083  =                       poll        equ   131               ; XDOS poll function
  0086  =                       makeque     equ   134               ; XDOS make queue
  0089  =                       readque     equ   137               ; XDOS read queue
  008B  =                       writeque    equ   139               ; XDOS write queue
  008D  =                       xdelay      equ   141               ; XDOS delay
  0090  =                       create      equ   144               ; XDOS create process
  0084  =                       flagwait    equ   132
  0085  =                       flagset     equ   133
  008E  =                       dsptch      equ   142
                                
                                
  0000  =                       pldsk       equ   0                 ; poll CF 
  0001  =                       plci0       equ   1                 ; poll console #0 input
  0002  =                       plco0       equ   2                 ; poll console #0 output
  0003  =                       plci1       equ   3                 ; poll console #1 input
  0004  =                       plco1       equ   4                 ; poll console #1 output
                                ;pllpt       equ   5                 ; poll LPT     
                                
                                            ; Console status
  01B5' CD 01CA'                const:      call  ptbljmp           ; compute and jump to hndlr
  01B8' 01DC'                               dw    pt0st             ; console #0 status routine
  01BA' 0210'                               dw    pt1st             ; console #1 status routine
                                
                                            ; Read console character in
  01BC' CD 01CA'                conin:      call  ptbljmp           ; compute and jump to hndlr
  01BF' 01E5'                               dw    pt0in             ; console #0 input
  01C1' 0219'                               dw    pt1in             ; console #1 input
                                
                                            ; Write console character out
  01C3' CD 01CA'                conout:     call  ptbljmp           ; compute and jump to hndlr
  01C6' 01F2'                               dw    pt0out            ; console #0 output
  01C8' 0226'                               dw    pt1out            ; console #1 output
                                
  01CA' 7A                      ptbljmp:    ld    a,d               ; compute and jump to handler,
  01CB' FE 02                               cp    numcns            ; d = console #, preserve it
  01CD' 38 02                               jr    c,tbljmp
                                ;           pop	af		; throw away table address (??)
  01CF' AF                      rtnempty:   xor   a
  01D0' C9                                  ret
  01D1' 87                      tbljmp:     add   a,a
  01D2' E1                                  pop   hl
  01D3' 5F                                  ld    e,a
  01D4' 16 00                               ld    d,0
  01D6' 19                                  add   hl,de
  01D7' 5E                                  ld    e,(hl)
  01D8' 23                                  inc   hl
ZSM 4.4	Source file: XIOS     	14-Apr-2022  18:03:20	Page    8
MP/M-II Banked XIOS for RC2014

  01D9' 56                                  ld    d,(hl)
  01DA' EB                                  ex    de,hl
  01DB' E9                                  jp    (hl)              ; jump to computed cns handler
                                
                                ; -----------------------------------------------------------------------------
                                ;	C O N S O L E   0
                                
  01DC'                         polci0:
  01DC' ED 38 C4                pt0st:      in0   a,(STAT0)         ; Console status
  01DF' E6 80                               and   80h               ; Receive register (ST_RDRF) full?
  01E1' C8                                  ret   z
  01E2' 3E FF                               ld    a,0FFh
  01E4' C9                                  ret
                                
  01E5' 0E 83                   pt0in:      ld    c,poll
  01E7' 1E 01                               ld    e,plci0
  01E9' CD 0057'                            call  xdos              ; poll console #0 input
  01EC' ED 38 C8                            in0   a,(RDR0)
  01EF' E6 7F                               and   7Fh
  01F1' C9                                  ret
                                
  01F2' ED 38 C4                pt0out:     in0   a,(STAT0)         ; console output
  01F5' CB 4F                               bit   ST_TDRE,a         ; tx ready?
  01F7' 20 09                               jr    nz,tx0rdy
  01F9' C5                                  push  bc
  01FA' 0E 83                               ld    c,poll
  01FC' 1E 02                               ld    e,plco0
  01FE' CD 0057'                            call  xdos              ; poll console #0 output
  0201' C1                                  pop   bc
  0202' 79                      tx0rdy:     ld    a,c
  0203' ED 39 C6                            out0  (TDR0),a          ; send it
  0206' C9                                  ret
                                
  0207' ED 38 C4                polco0:     in0   a,(STAT0)         ; Read UART status register of COM port 0.
  020A' E6 02                               and   02h               ; tx (ST_TDRE) ready?
  020C' C8                                  ret   z
  020D' 3E FF                               ld    a,0FFh
  020F' C9                                  ret
                                ; -----------------------------------------------------------------------------
                                ;	C O N S O L E   1
                                
  0210'                         polci1:
  0210' ED 38 C5                pt1st:      in0   a,(STAT1)         ; Console status
  0213' E6 80                               and   80h               ; Receive register (ST_RDRF) full?
  0215' C8                                  ret   z                 ; 00h - not ready
  0216' 3E FF                               ld    a,0FFh            ; FFh - ready
  0218' C9                                  ret
                                
  0219' 0E 83                   pt1in:      ld    c,poll
  021B' 1E 03                               ld    e,plci1
  021D' CD 0057'                            call  xdos              ; poll console #1 input
  0220' ED 38 C9                            in0   a,(RDR1)
  0223' E6 7F                               and   7Fh
  0225' C9                                  ret
                                
  0226' ED 38 C5                pt1out:     in0   a,(STAT1)         ; console output
  0229' CB 4F                               bit   ST_TDRE,a         ; Test TX Data Register Empty ready bit and
ZSM 4.4	Source file: XIOS     	14-Apr-2022  18:03:20	Page    9
MP/M-II Banked XIOS for RC2014

  022B' 20 09                               jr    nz,tx1rdy
  022D' C5                                  push  bc
  022E' 0E 83                               ld    c,poll
  0230' 1E 04                               ld    e,plco1
  0232' CD 0057'                            call  xdos              ; poll console #1 output
  0235' C1                                  pop   bc
  0236' 79                      tx1rdy:     ld    a,c
  0237' ED 39 C7                            out0  (TDR1),a          ; send it
  023A' C9                                  ret
                                
  023B' ED 38 C5                polco1:     in0   a,(STAT1)         ; Read UART status register of COM port 1.
  023E' E6 02                               and   02h               ; tx (ST_TDRE) ready?
  0240' C8                                  ret   z
  0241' 3E FF                               ld    a,0FFh
  0243' C9                                  ret
                                
                                ; -----------------------------------------------------------------------------
                                ;	L I S T   D E V I C E  (in progress)
                                
                                ;pollpt:
  0244' AF                      listst:     xor   a
  0245' C9                                  ret                     ; 00h - not ready
                                
                                ; Output C on Printer
  0246'                         list:
  0246' CD 0244'                lptout:     call  listst            ; Busy?
  0249' 20 00                               jr    nz,lptrdy         ; Go if ready
                                ;            push  bc
                                ;            ld    c,poll
                                ;            ld    e,pllpt
                                ;            call  xdos
                                ;            pop   bc
  024B'                         lptrdy:
  024B' ED 09 4C                            out0  (PIOAD),c         ; Latch data
  024E' C9                                  ret
                                
                                ; -----------------------------------------------------------------------------
                                ; Maximum Console Number
  024F' 3E 02                   maxconsole: ld    a,numcns
  0251' C9                                  ret
                                
                                ; -----------------------------------------------------------------------------
                                ; Reg C = device # to be polled
                                ;	 return 0ffh if ready, 000h if not
  0252' 79                      polldevice: ld    a,c
  0253' FE 05                               cp    numdev
  0255' 38 02                               jr    c,devok
  0257' 3E 05                               ld    a,numdev
                                
  0259' CD 01D1'                devok:      call  tbljmp            ; jump to dev poll code
                                
  025C' 0268'                   devtbl:     dw    poldsk
  025E' 01DC'                               dw    polci0
  0260' 0207'                               dw    polco0
  0262' 0210'                               dw    polci1
  0264' 023B'                               dw    polco1
  0005  =                       numdev      equ   ($-devtbl)/2
ZSM 4.4	Source file: XIOS     	14-Apr-2022  18:03:20	Page   10
MP/M-II Banked XIOS for RC2014

  0266' 01CF'                               dw    rtnempty
                                
                                ; -----------------------------------------------------------------------------
                                ; -----------------------------------------------------------------------------
                                ; Poll CF Disk
  0268' DB 17                   poldsk:     in    a,(CF_STATUS)     ;Read status register 
  026A' E6 80                               and   80h               ; A[7] (Busy)
  026C' EE 80                               xor   80h
  026E' C8                                  ret   z
  026F' 3E FF                               ld    a,0FFh
  0271' C9                                  ret
                                
                                ; -----------------------------------------------------------------------------
                                ;       B A N K   S W I T C H I N G
                                ;    adr of mem descriptor = BC ----> base   1 byte,
  0272' 03                      selmemory:  inc   bc                ; size   1 byte,
  0273' 03                                  inc   bc                ; attrib 1 byte,
  0274' 03                                  inc   bc                ; bank   1 byte.
  0275' 0A                                  ld    a,(bc)
  0276' E6 07                   selbank:    and   7                 ; bank number
  0278' F6 08                               or    8                 ; + base adrr (80h)>>4
  027A' 17                                  rla 
  027B' 17                                  rla
  027C' 17                                  rla
  027D' 17                                  rla
  027E' ED 39 F9                            out0  (bbr),a
  0281' C9                                  ret
                                
                                ; -----------------------------------------------------------------------------
  0282' 3E FF                   startclock: ld    a,0FFh            ; will cause flag #1 to be set
  0284' 32 0524'                            ld    (tickn),a         ; at each system time unit tick
  0287' C9                                  ret
                                
  0288' AF                      stopclock:  xor   a                 ; will stop flag #1 setting at
  0289' 32 0524'                            ld    (tickn),a         ; system time unit tick
  028C' C9                                  ret
                                
  028D' 3A 0525'                exitregion: ld    a,(preemp)
  0290' B7                                  or    a
  0291' C0                                  ret   nz
  0292' FB                                  ei                      ; EI if not preempted or in dispatcher
  0293' C9                                  ret
                                
                                ; -----------------------------------------------------------------------------
                                ;	I N T E R R U P T   H A N D L E R S
                                ;     code by Hector Peraza
                                ; -----------------------------------------------------------------------------
                                
  0032  =                       tickspsec   equ   50
  4800  =                       reload      equ   18432             ; CPU freq/1000
                                
  0294' F3                      timerint:   di
  0295' ED 73 0522'                         ld    (savsp),sp
  0299' 31 0522'                            ld    sp,lstintstk      ; local stack for intr hndl
  029C' F5                                  push  af
  029D' E5                                  push  hl
  029E' D5                                  push  de
ZSM 4.4	Source file: XIOS     	14-Apr-2022  18:03:20	Page   11
MP/M-II Banked XIOS for RC2014

  029F' C5                                  push  bc
  02A0' DD E5                               push  ix
  02A2' FD E5                               push  iy
  02A4' 3E FF                               ld    a,0FFh
  02A6' 32 0525'                            ld    (preemp),a
  02A9' ED 38 D0                            in0   a,(TCR)
  02AC' ED 38 CC                            in0   a,(TMDR0L)
  02AF' ED 38 CD                            in0   a,(TMDR0H)
  02B2' 3A 0524'                            ld    a,(tickn)         ; test tickn, indicates delayed processes
  02B5' B7                                  or    a
  02B6' 28 07                               jr    z,notickn
  02B8' 0E 85                               ld    c,flagset
  02BA' 1E 01                               ld    e,1
  02BC' CD 0057'                            call  xdos              ; set flag #1 each tick
                                
  02BF' 21 04F8'                notickn:    ld    hl,cnt1sec
  02C2' 35                                  dec   (hl)
  02C3' 20 09                               jr    nz,intdone
  02C5' 36 32                               ld    (hl),tickspsec
  02C7' 0E 85                               ld    c,flagset
  02C9' 1E 02                               ld    e,2
  02CB' CD 0057'                            call  xdos              ; set flag #2 @ 1 sec
                                
  02CE' AF                      intdone:    xor   a
  02CF' 32 0525'                            ld    (preemp),a        ; clear preempted flag
  02D2' FD E1                               pop   iy
  02D4' DD E1                               pop   ix
  02D6' C1                                  pop   bc
  02D7' D1                                  pop   de
  02D8' E1                                  pop   hl
  02D9' F1                                  pop   af
  02DA' ED 7B 0522'                         ld    sp,(savsp)
  02DE' C3 0054'                            jp    pdisp             ; dispatch
                                
  02E1' F3                      badint:     di
  02E2' 31 0522'                            ld    sp,lstintstk
  02E5' 3E FF                               ld    a,0FFh
  02E7' 32 0525'                            ld    (preemp),a
  02EA' 21 02F2'                            ld    hl,bintm
  02ED' CD 01A4'                            call  putmsg
  02F0' F3                                  di
  02F1' 76                                  halt
                                
  02F2' 42 61 64 49 6E 74       bintm:      db    "BadInt",0
  02F8' 00                      
                                
                                ;==============================================================================
                                ;	D I S K - M A N A G E M E N T   F U N C T I O N S
                                
  02F9' 3A 15C6'                home:       ld    a,(hstwrt)        ; check for pending write
  02FC' B7                                  or    a
  02FD' 20 03                               jr    nz,homed
  02FF' 32 15C5'                            ld    (hstact),a        ; clear host active flag
  0302' 01 0000                 homed:      ld    bc,0000h
                                ; -----------------------------------------------------------------------------
  0305' ED 43 15BC'             settrk:     ld    (sektrk),bc       ; Set track passed from BDOS in register BC.
  0309' C9                                  ret
ZSM 4.4	Source file: XIOS     	14-Apr-2022  18:03:20	Page   12
MP/M-II Banked XIOS for RC2014

                                ; -----------------------------------------------------------------------------
                                ; Save Sector Number Passed in Reg C.
                                
  030A' ED 43 15BE'             setsec:     ld    (seksec),bc       ; Set sector passed from BDOS in register BC.
  030E' C9                                  ret
                                ; -----------------------------------------------------------------------------
                                
                                ; Translate Sector (BC), using table at (DE)
                                
  030F' C5                      sectran:    push  bc
  0310' E1                                  pop   hl                ; Null routine: just BC => HL
  0311' C9                                  ret
                                ; -----------------------------------------------------------------------------
                                
  0312' ED 43 15D0'             setdma:     ld    (dmaadr),bc       ; Buffer addr. in BC
  0316' C9                                  ret
                                ; -----------------------------------------------------------------------------
  0317' 21 0000                 seldsk:     ld    hl,0000h          ; Select drive (C): DPH ptr. in HL
  031A' 79                                  ld    a,c
  031B' FE 10                               cp    16                ; 16 for 128MB disk
  031D' 38 0D                               jr    c,chgdsk          ; if invalid drive will give BDOS error
  031F' 3A 0526'                            ld    a,(userdrv)       ; so set the drive back to a:
  0322' B9                                  cp    c                 ; If the default disk is not the same as the
  0323' C0                                  ret   nz                ; selected drive then return, 
  0324' AF                                  xor   a                 ; else reset default back to a:
  0325' 32 0526'                            ld    (userdrv),a       ; otherwise will be stuck in a loop
  0328' 32 15BB'                            ld    (sekdsk),a
  032B' C9                                  ret
                                ; -----------------------------------------------------------------------------
  032C' 32 15BB'                chgdsk:     ld    (sekdsk),a
  032F' CB 07                               rlc   a                 ;*2
  0331' CB 07                               rlc   a                 ;*4
  0333' CB 07                               rlc   a                 ;*8
  0335' CB 07                               rlc   a                 ;*16
  0337' 21 0077'                            ld    hl,dpbase
  033A' 06 00                               ld    b,0
  033C' 4F                                  ld    c,a 
  033D' 09                                  add   hl,bc             ; hl is the new DPB address
  033E' C9                                  ret
                                
                                ;------------------------------------------------------------------------------
                                            ;read the selected MP/M sector
  033F' AF                      read:       xor   a
  0340' 32 15C7'                            ld    (unacnt),a        ;unacnt = 0
  0343' 3C                                  inc   a
  0344' 32 15CE'                            ld    (readop),a        ;read operation
  0347' 32 15CD'                            ld    (rsflag),a        ;must read data
  034A' 3E 02                               ld    a,wrual
  034C' 32 15CF'                            ld    (wrtype),a        ;treat as unalloc
  034F' C3 03B9'                            jp    rwoper            ;to perform the read
                                ;------------------------------------------------------------------------------
                                            ;write the selected MP/M sector
  0352' AF                      write:      xor   a                 ;0 to accumulator
  0353' 32 15CE'                            ld    (readop),a        ;not a read operation
  0356' 79                                  ld    a,c               ;write type in c
  0357' 32 15CF'                            ld    (wrtype),a
  035A' FE 02                               cp    wrual             ;write unallocated?
ZSM 4.4	Source file: XIOS     	14-Apr-2022  18:03:20	Page   13
MP/M-II Banked XIOS for RC2014

  035C' 20 17                               jr    nz,chkuna         ;check for unalloc
                                ;
                                ;                             write to unallocated, set parameters
  035E' 3E 20                               ld    a,blksiz/128      ;next unalloc recs
  0360' 32 15C7'                            ld    (unacnt),a
  0363' 3A 15BB'                            ld    a,(sekdsk)        ;disk to seek
  0366' 32 15C8'                            ld    (unadsk),a        ;unadsk = sekdsk
  0369' 2A 15BC'                            ld    hl,(sektrk)
  036C' 22 15C9'                            ld    (unatrk),hl       ;unatrk = sectrk
  036F' 3A 15BE'                            ld    a,(seksec)
  0372' 32 15CB'                            ld    (unasec),a        ;unasec = seksec
                                ;
                                ;                             check for write to unallocated sector
  0375' 3A 15C7'                chkuna:     ld    a,(unacnt)        ;any unalloc remain?
  0378' B7                                  or    a
  0379' 28 36                               jr    z,alloc           ;skip if not
                                ;
                                ;                             more unallocated records remain
  037B' 3D                                  dec   a                 ;unacnt = unacnt-1
  037C' 32 15C7'                            ld    (unacnt),a
  037F' 3A 15BB'                            ld    a,(sekdsk)        ;same disk?
  0382' 21 15C8'                            ld    hl,unadsk
  0385' BE                                  cp    (hl)              ;sekdsk = unadsk?
  0386' C2 03B1'                            jp    nz,alloc          ;skip if not
                                ;
                                ;                             disks are the same
  0389' 21 15C9'                            ld    hl,unatrk
  038C' CD 0453'                            call  sektrkcmp      ;sektrk = unatrk?
  038F' C2 03B1'                            jp    nz,alloc         ;skip if not
                                ;
                                ;                             tracks are the same
  0392' 3A 15BE'                            ld    a,(seksec)        ;same sector?
  0395' 21 15CB'                            ld    hl,unasec
  0398' BE                                  cp    (hl)              ;seksec = unasec?
  0399' C2 03B1'                            jp    nz,alloc          ;skip if not
                                ;
                                ;                             match, move to next sector for future ref
  039C' 34                                  inc   (hl)              ;unasec = unasec+1
  039D' 7E                                  ld    a,(hl)            ; end of track?
  039E' FE 80                               cp    cpmspt            ;count CP/M sectors
  03A0' 38 09                               jr    c,noovf           ;skip if no overflow
                                ;
                                ;                             overflow to next track
  03A2' 36 00                               ld    (hl),0            ;unasec = 0
  03A4' 2A 15C9'                            ld    hl,(unatrk)
  03A7' 23                                  inc   hl
  03A8' 22 15C9'                            ld    (unatrk),hl      ;unatrk = unatrk+1
                                ;
                                            ;match found, mark as unnecessary read
  03AB' AF                      noovf:      xor   a                 ;0 to accumulator
  03AC' 32 15CD'                            ld    (rsflag),a        ;rsflag = 0
  03AF' 18 08                               jr    rwoper            ;to perform the write
                                ;
                                            ;not an unallocated record, requires pre-read
  03B1' AF                      alloc:      xor   a                 ;0 to accum
  03B2' 32 15C7'                            ld    (unacnt),a        ;unacnt = 0
  03B5' 3C                                  inc   a                 ;1 to accum
ZSM 4.4	Source file: XIOS     	14-Apr-2022  18:03:20	Page   14
MP/M-II Banked XIOS for RC2014

  03B6' 32 15CD'                            ld    (rsflag),a        ;rsflag = 1
                                
                                ;------------------------------------------------------------------------------
                                            ;enter here to perform the read/write
  03B9' AF                      rwoper:     xor   a                 ;zero to accum
  03BA' 32 15CC'                            ld    (erflag),a        ;no errors (yet)
  03BD' 3A 15BE'                            ld    a,(seksec)        ;compute host sector
  03C0' B7                                  or    a                 ;carry = 0
  03C1' 1F                                  rra                     ;shift right
  03C2' B7                                  or   a                  ;carry = 0
  03C3' 1F                                  rra                     ;shift right
  03C4' 32 15C4'                            ld    (sekhst),a        ;host sector to seek
                                ;
                                ;                             active host sector?
  03C7' 21 15C5'                            ld    hl,hstact         ;host active flag
  03CA' 7E                                  ld    a,(hl)
  03CB' 36 01                               ld    (hl),1            ;always becomes 1
  03CD' B7                                  or    a                 ;was it already?
  03CE' 28 21                               jr    z,filhst          ; fill host if not
                                ;
                                ;                             host buffer active, same as seek buffer?
  03D0' 3A 15BB'                            ld    a,(sekdsk)
  03D3' 21 15C0'                            ld    hl,hstdsk         ;same disk?
  03D6' BE                                  cp    (hl)              ;sekdsk = hstdsk?
  03D7' 20 11                               jr    nz,nomatch
                                ;
                                ;                             same disk, same track?
  03D9' 21 15C1'                            ld    hl,hsttrk
  03DC' CD 0453'                            call  sektrkcmp         ;sektrk = hsttrk?
  03DF' 20 09                               jr    nz,nomatch
                                ;
                                ;                             same disk, same track, same buffer?
  03E1' 3A 15C4'                            ld    a,(sekhst)
  03E4' 21 15C3'                            ld    hl,hstsec         ;sekhst = hstsec?
  03E7' BE                                  cp    (hl)
  03E8' 28 24                               jr    z,match           ;skip if match
                                            ;     proper disk, but not correct sector
  03EA' 3A 15C6'                nomatch:    ld    a,(hstwrt)        ;host written?
  03ED' B7                                  or    a
  03EE' C4 04C5'                            call  nz,writehst       ;clear host buff
                                            ;     may have to fill the host buffer
  03F1' 3A 15BB'                filhst:     ld    a,(sekdsk)
  03F4' 32 15C0'                            ld    (hstdsk),a
  03F7' 2A 15BC'                            ld    hl,(sektrk)
  03FA' 22 15C1'                            ld    (hsttrk),hl
  03FD' 3A 15C4'                            ld    a,(sekhst)
  0400' 32 15C3'                            ld    (hstsec),a
  0403' 3A 15CD'                            ld    a,(rsflag)        ;need to read?
  0406' B7                                  or    a
  0407' C4 04A2'                            call  nz,readhst        ;yes, if 1
  040A' AF                                  xor   a                 ;0 to accum
  040B' 32 15C6'                            ld    (hstwrt),a        ;no pending write
                                            ;     copy data to or from buffer
  040E' 3A 15BE'                match:      ld    a,(seksec)        ;mask buffer number
  0411' E6 03                               and   secmsk            ;least signif bits
  0413' 67                                  ld    h,a
  0414' 2E 80                               ld    l,128
ZSM 4.4	Source file: XIOS     	14-Apr-2022  18:03:20	Page   15
MP/M-II Banked XIOS for RC2014

  0416' ED 6C                               mlt   hl
                                ;                             hl has relative host buffer address
  0418' 11 15D2'                            ld    de,hstbuf
  041B' 19                                  add   hl,de             ;hl = host address
  041C' ED 5B 15D0'                         ld    de,(dmaadr)       ;get/put MP/M data
  0420' 3A 15CE'                            ld    a,(readop)        ;which way?
  0423' B7                                  or    a
  0424' 20 06                               jr    nz,rwmove         ;skip if read
                                ;
                                ;           write operation, mark and switch direction
  0426' 3E 01                               ld    a,1
  0428' 32 15C6'                            ld    (hstwrt),a        ;hstwrt = 1
  042B' EB                                  ex    de,hl             ;source/dest swap
                                ;
                                            ;BC initially 128, HL is source, DE is dest
  042C' D5                      rwmove:     push  de
  042D' E5                                  push  hl
                                
  042E' CD 004E'                            call  swtuser           ;switch to user context
  0431' F3                                  di                      ;disable int
  0432' E1                                  pop   hl
  0433' D1                                  pop   de
  0434' 01 0080                             ld    bc, 128           ;length of move 
  0437' FB                                  ei           
  0438' ED B0                               ldir
  043A' CD 0051'                            call  swtsys            ;back to system context
                                ;
                                ;                             data has been moved to/from host buffer
  043D' 3A 15CF'                            ld    a,(wrtype)        ;write type
  0440' FE 01                               cp    wrdir             ;to directory?
  0442' 3A 15CC'                            ld    a,(erflag)        ;in case of errors
  0445' C0                                  ret   nz                ;no further processing
                                ;
                                ;                             clear host buffer for directory write
  0446' B7                                  or    a                 ;errors?
  0447' C0                                  ret   nz                ;skip if so
  0448' AF                                  xor   a                 ;0 to accum
  0449' 32 15C6'                            ld    (hstwrt),a        ;buffer written
  044C' CD 04C5'                            call  writehst
  044F' 3A 15CC'                            ld    a,(erflag)
  0452' C9                                  ret
                                
                                ;------------------------------------------------------------------------------
                                ;Utility subroutine for 16-bit compare
  0453'                         sektrkcmp:
                                            ;HL = .unatrk or .hsttrk, compare with sektrk
  0453' EB                                  ex    de,hl
  0454' 21 15BC'                            ld    hl,sektrk
  0457' 1A                                  ld    a,(de)            ;low byte compare
  0458' BE                                  cp    (hl)              ;same?
  0459' C0                                  ret   nz                ;return if not
                                ;                             low bytes equal, test high 1s
  045A' 13                                  inc   de
  045B' 23                                  inc   hl
  045C' 1A                                  ld    a,(de)
  045D' BE                                  cp    (hl)              ;sets flags
  045E' C9                                  ret
ZSM 4.4	Source file: XIOS     	14-Apr-2022  18:03:20	Page   16
MP/M-II Banked XIOS for RC2014

                                
                                ;==============================================================================
                                ; Convert track/head/sector into LBA for physical access to the disk
                                ; 00Vvvvvv|vvTttttt|tttsssss   some serious bitshifting ahead
                                ; code by Rienk H. Koolstra
                                ;==============================================================================
  045F' 2A 15C1'                SetLBAadr:  ld    hl,(hsttrk)       ; 0000000T tttttttt
  0462' 7D                                  ld    a,l               ; tttttttt
  0463' E6 07                               and   07h               ; 00000ttt
  0465' 0F                                  rrca                    ; t00000tt
  0466' 0F                                  rrca                    ; tt00000t
  0467' 0F                                  rrca                    ; ttt00000
  0468' 47                                  ld    b,a
  0469' 3A 15C3'                            ld    a,(hstsec)        ; 000sssss
  046C' B0                                  or    b                 ; tttsssss
  046D' 32 15B7'                            ld    (lba0),a
                                
  0470' 7D                                  ld    a,l               ; tttttttt
  0471' E6 F8                               and   0F8h              ; ttttt000
  0473' B4                                  or    h                 ; ttttt00T
  0474' 0F                                  rrca                    ; Tttttt00
  0475' 0F                                  rrca                    ; 0Tttttt0
  0476' 0F                                  rrca                    ; 00Tttttt
  0477' 47                                  ld    b,a
  0478' 3A 15C0'                            ld    a,(hstdsk)        ; Vvvvvvvv (V is used for the 128+ diskset)
  047B' 0F                                  rrca                    ; vVvvvvvv
  047C' 0F                                  rrca                    ; vvVvvvvv
  047D' 4F                                  ld    c,a
  047E' E6 C0                               and   0C0h              ; vv000000
  0480' B0                                  or    b                 ; vvTttttt
  0481' 32 15B8'                            ld    (lba1),a
                                
  0484' 79                                  ld    a,c               ; vvVvvvvv
  0485' E6 3F                               and   3Fh               ; 00Vvvvvv
  0487' 32 15B9'                            ld    (lba2),a
  048A' 3E E0                               ld    a,0E0h            ; LBA Mode using drive 0 = E0
  048C' 32 15BA'                            ld    (lba3),a
                                
  048F' 0E 13                               ld    c,CF_LBA0         ; first LBA port
  0491' 21 15B7'                            ld    hl,lba0           ; set first LBA
  0494' 06 04                               ld    b,4               ; 4 to go
  0496' ED A3                   sl1:        outi                    ; output and increment HL
  0498' 28 03                               jr    z,sl2             ; if all 4 done, exit
  049A' 0C                                  inc   c                 ; next LBA Port
  049B' 18 F9                               jr    sl1               ; output next LBA
                                
  049D' 3E 01                   sl2:        ld    a,1
  049F' D3 12                               out   (CF_SECCOUNT),a
                                
  04A1' C9                                  ret    
                                
                                ;==============================================================================
                                ; Read physical sector from host
                                ;==============================================================================
                                
  04A2' F5                      readhst:    push   af
  04A3' C5                                  push   bc
ZSM 4.4	Source file: XIOS     	14-Apr-2022  18:03:20	Page   17
MP/M-II Banked XIOS for RC2014

  04A4' E5                                  push   hl
                                
  04A5' CD 04E8'                            call  cfWait
  04A8' CD 045F'                            call  SetLBAadr
                                
  04AB' 3E 20                               ld    a,CF_READ_SEC
  04AD' D3 17                               out   (CF_COMMAND),a
                                
  04AF' CD 04E8'                            call  cfWait
  04B2' 21 15D2'                            ld    hl,hstbuf
  04B5' 06 00                               ld    b,0
  04B7' 0E 10                               ld    c,CF_DATA
  04B9' ED B2                               inir                    ; input 256 bytes
  04BB' ED B2                               inir                    ; and another 256
                                
  04BD' E1                                  pop   hl
  04BE' C1                                  pop   bc
  04BF' F1                                  pop   af
                                
  04C0' AF                                  xor   a
  04C1' 32 15CC'                            ld    (erflag),a
  04C4' C9                                  ret
                                
                                ;==============================================================================
                                ; Write physical sector to host
                                ;==============================================================================
                                
  04C5' F5                      writehst:   push  af
  04C6' C5                                  push  bc
  04C7' E5                                  push  hl
                                
  04C8' CD 04E8'                            call  cfWait
  04CB' CD 045F'                            call  SetLBAadr
                                
  04CE' 3E 30                               ld    a,CF_WRITE_SEC
  04D0' D3 17                               out   (CF_COMMAND),a
                                
  04D2' CD 04E8'                            call  cfWait
  04D5' 21 15D2'                            ld    hl,hstbuf
  04D8' 06 00                               ld    b,0
  04DA' 0E 10                               ld    c,CF_DATA
  04DC' ED B3                               otir                    ; output 256 bytes
  04DE' ED B3                               otir                    ; and another 256
                                
  04E0' E1                                  pop   hl
  04E1' C1                                  pop   bc
  04E2' F1                                  pop   af
                                
  04E3' AF                                  xor   a
  04E4' 32 15CC'                            ld    (erflag),a
  04E7' C9                                  ret
                                
                                ;==============================================================================
                                ; Wait for disk to be ready (busy=0,ready=1)
                                ;==============================================================================
                                
  04E8' F5                      cfWait:     push  af
ZSM 4.4	Source file: XIOS     	14-Apr-2022  18:03:20	Page   18
MP/M-II Banked XIOS for RC2014

  04E9' DB 17                               in    a,(CF_STATUS)     ;Read status register
  04EB' CB 7F                               bit   7,a               ;Test Busy flag
  04ED' 28 07                               jr    z, cfReady
                                            ; High so busy
  04EF' 0E 83                               ld    c,poll
  04F1' 1E 00                               ld    e,pldsk
  04F3' CD 0057'                            call  xdos              ; poll CF disk
                                
  04F6' F1                      cfReady:    pop   af
  04F7' C9                                  ret
                                
                                ;==============================================================================
                                ; Data storage
                                ;==============================================================================
                                
  04F8' 32                      cnt1sec:    db    tickspsec         ; ticks per second counter
                                
  04F9' ( 0001 )                timdbg      ds    1                 ; Timer Debuger
                                
  04FA'                         intstk:                             ; local interrupt stack	
  04FA' C7C7  C7C7  C7C7                    dw    0c7c7h,0c7c7h,0c7c7h,0c7c7h,0c7c7h
  0500' C7C7  C7C7              
  0504' C7C7  C7C7  C7C7                    dw    0c7c7h,0c7c7h,0c7c7h,0c7c7h,0c7c7h
  050A' C7C7  C7C7              
  050E' C7C7  C7C7  C7C7                    dw    0c7c7h,0c7c7h,0c7c7h,0c7c7h,0c7c7h
  0514' C7C7  C7C7              
  0518' C7C7  C7C7  C7C7                    dw    0c7c7h,0c7c7h,0c7c7h,0c7c7h,0c7c7h
  051E' C7C7  C7C7              
  0522'                         lstintstk:        
  0522' ( 0002 )                savsp:      ds    2                 ; saved SP during interrupts
  0524' 00                      tickn:      db    0                 ; ticking boolean, true = delayed
  0525' 00                      preemp:     db    0                 ; preempted boolean
                                                  
  0526' ( 0001 )                userdrv:    ds    1                 ; Boot-drive number
                                
  0527'                         localData:              ; XIOS workspace
                                
  0527' ( 0080 )                dirbuf:     ds    128               ;scratch directory area
  05A7' ( 0101 )                alv00:      ds    257               ;allocation vector 0
  06A8' ( 0101 )                alv01:      ds    257               ;allocation vector 1
  07A9' ( 0101 )                alv02:      ds    257               ;allocation vector 2
  08AA' ( 0101 )                alv03:      ds    257               ;allocation vector 3
  09AB' ( 0101 )                alv04:      ds    257               ;allocation vector 4
  0AAC' ( 0101 )                alv05:      ds    257               ;allocation vector 5
  0BAD' ( 0101 )                alv06:      ds    257               ;allocation vector 6
  0CAE' ( 0101 )                alv07:      ds    257               ;allocation vector 7
  0DAF' ( 0101 )                alv08:      ds    257               ;allocation vector 8
  0EB0' ( 0101 )                alv09:      ds    257               ;allocation vector 9
  0FB1' ( 0101 )                alv10:      ds    257               ;allocation vector 10
  10B2' ( 0101 )                alv11:      ds    257               ;allocation vector 11
  11B3' ( 0101 )                alv12:      ds    257               ;allocation vector 12
  12B4' ( 0101 )                alv13:      ds    257               ;allocation vector 13
  13B5' ( 0101 )                alv14:      ds    257               ;allocation vector 14
  14B6' ( 0101 )                alv15:      ds    257               ;allocation vector 15
                                
  15B7' 00                      lba0        db    00h
  15B8' 00                      lba1        db    00h
ZSM 4.4	Source file: XIOS     	14-Apr-2022  18:03:20	Page   19
MP/M-II Banked XIOS for RC2014

  15B9' 00                      lba2        db    00h
  15BA' 00                      lba3        db    00h
                                
  15BB' ( 0001 )                sekdsk:     ds    1                 ;seek disk number
  15BC' ( 0002 )                sektrk:     ds    2                 ;seek track number
  15BE' ( 0002 )                seksec:     ds    2                 ;seek sector number
                                ;
  15C0' ( 0001 )                hstdsk:     ds    1                 ;host disk number
  15C1' ( 0002 )                hsttrk:     ds    2                 ;host track number
  15C3' ( 0001 )                hstsec:     ds    1                 ;host sector number
                                ;
  15C4' ( 0001 )                sekhst:     ds    1                 ;seek shr secshf
  15C5' ( 0001 )                hstact:     ds    1                 ;host active flag
  15C6' ( 0001 )                hstwrt:     ds    1                 ;host written flag
                                ;
  15C7' ( 0001 )                unacnt:     ds    1                 ;unalloc rec cnt
  15C8' ( 0001 )                unadsk:     ds    1                 ;last unalloc disk
  15C9' ( 0002 )                unatrk:     ds    2                 ;last unalloc track
  15CB' ( 0001 )                unasec:     ds    1                 ;last unalloc sector
                                ;
  15CC' ( 0001 )                erflag:     ds    1                 ;error reporting
  15CD' ( 0001 )                rsflag:     ds    1                 ;read sector flag
  15CE' ( 0001 )                readop:     ds    1                 ;1 if read operation
  15CF' ( 0001 )                wrtype:     ds    1                 ;write operation type
  15D0' ( 0002 )                dmaadr:     ds    2                 ;last dma address
  15D2' ( 0200 )                hstbuf:     ds    512               ;host buffer
                                
                                ; -----------------------------------------------------------------------------
                                ; Cold-boot code, overlayed by local workspace above
                                ; -----------------------------------------------------------------------------
                                
  0527' =                                   org   localData
                                
                                ;	B O O T S T R A P   F U N C T I O N S
                                ; On entry: C, DE = Debuger (not used), HL = BIOS direct jump table address.
                                ;
  0527' F3                      systeminit: di                      ; Disable interrupts
  0528' AF                                  xor   a
  0529' ED 39 D0                            out0  (TCR),a           ; disable timer interrputs and RPT downcounting
  052C' ED 39 C4                            out0  (STAT0),a         ; disable interrupts ASCI0
  052F' ED 39 C5                            out0  (STAT1),a         ; disable interrupts ASCI1      
                                ; initialize mmu
                                ;    Common(0) not used
                                ;    Bank      0x0000 to 0xAFFF -> 0x80000 to 0x8AFFF 
                                ;    Common(1) 0xB000 to 0xFFFF -> 0x88000 to 0x8FFFF
  0532' 3E B0                               ld    a, 0B0h           ; 44k bank
  0534' ED 39 FA                            out0  (CBAR),a
  0537' 3E 80                               ld    a, 080h           ; base bank address 0x80000h
  0539' ED 39 F9                            out0  (BBR),a
                                ;
  053C' AF                                  xor   a                 ; Cold Start
  053D' 32 0526'                            ld    (userdrv),a       ; Start from the boot disk (Drive A:, User 0)
  0540' 32 15C5'                            ld    (hstact),a        ; Host Buffer inactive
  0543' 32 15C7'                            ld    (unacnt),a        ; unalloc. ctr. = 0
                                ;
  0546' 32 04F9'                            ld    (timdbg),a        ; Timer Debuger
                                ;
ZSM 4.4	Source file: XIOS     	14-Apr-2022  18:03:20	Page   20
MP/M-II Banked XIOS for RC2014

  0549' 21 0080                             ld    hl,tpabuf         ; Address of BIOS DMA buffer.
  054C' 22 15D0'                            ld    (dmaadr),hl
                                ; welcome message
  054F' 21 059B'                            ld    hl,Welcome
  0552' CD 01A4'                            call  PutMsg            ; Print welcome banner
                                ; initialize MP/M banks
  0555' 21 0000                             ld    hl,0
  0558' 11 059B'                            ld    de,Welcome        ; use the welcome message as storage area
  055B' 01 0040                             ld    bc,64             ; copy the first 64 bytes (contains XIOS and
  055E' ED B0                               ldir                    ; BDOS vectors, etc.)
  0560' 3E 07                               ld    a,7
  0562' F5                      inib2:      push  af
  0563' CD 0276'                            call  selbank
  0566' 21 059B'                            ld    hl,Welcome
  0569' 11 0000                             ld    de,0
  056C' 01 0040                             ld    bc,64
  056F' ED B0                               ldir
  0571' F1                                  pop   af
  0572' 3D                                  dec   a
  0573' 20 ED                               jr    nz,inib2
  0575' CD 0276'                            call  selbank           ; switch bank 0 back in
                                ; init hardware
  0578' 21 4800                             ld    hl,reload
  057B' ED 29 CE                            out0  (RLDR0L),l
  057E' ED 21 CF                            out0  (RLDR0H),h
                                
  0581' 3E 0F                               ld    a, 00001111b      ; Set output PIO PortA
  0583' D3 4E                               out   (PIOAC), a
                                ; init the Z180 int table (must begin on a 32-byte boundary)
  0585' 21 0060'                            ld    hl,itbl
  0588' 7D                                  ld    a,l
  0589' ED 39 F3                            out0  (IL),a            ; set Z180 low address
  058C' 7C                                  ld    a,h               ; get page
  058D' ED 47                               ld    i,a               ; to int register
                                
  058F' 3E 11                               ld    a,11h             ; turn ints on and enable downcounting
  0591' ED 39 D0                            out0  (TCR),a
  0594' 3E 00                               ld    a,00h             ; activate external interrupts (default=disable)
  0596' ED 39 F4                            out0  (ITC),a
  0599' FB                                  ei
  059A' C9                                  ret
                                
  059B' 0D 0A 42 61 6E 6B       Welcome:    db	CR,LF,"Banked XIOS v1.1 for RC2014 by T.Pycio 2022",CR,0
  05A1' 65 64 20 58 49 4F       
  05A7' 53 20 76 31 2E 31       
  05AD' 20 66 6F 72 20 52       
  05B3' 43 32 30 31 34 20       
  05B9' 62 79 20 54 2E 50       
  05BF' 79 63 69 6F 20 32       
  05C5' 30 32 32 0D 00          
                                
  0000  =                                   end

Errors: 0
ZSM 4.4	Source file: XIOS     	14-Apr-2022  18:03:20	Page   21

Symbols:
ALLOC ............ 03B1'  ALV00 ............ 05A7'  ALV01 ............ 06A8'
ALV02 ............ 07A9'  ALV03 ............ 08AA'  ALV04 ............ 09AB'
ALV05 ............ 0AAC'  ALV06 ............ 0BAD'  ALV07 ............ 0CAE'
ALV08 ............ 0DAF'  ALV09 ............ 0EB0'  ALV10 ............ 0FB1'
ALV11 ............ 10B2'  ALV12 ............ 11B3'  ALV13 ............ 12B4'
ALV14 ............ 13B5'  ALV15 ............ 14B6'  BADINT ........... 02E1'
BASEIO ........... 00C0   BBR .............. 00F9   BCR0H ............ 00E7 
BCR0L ............ 00E6   BCR1H ............ 00EF   BCR1L ............ 00EE 
BINTM ............ 02F2'  BLKSIZ ........... 1000   BRK0 ............. 00D2 
BRK1 ............. 00D3   CBAR ............. 00FA   CBR .............. 00F8 
CCR .............. 00DF   CFREADY .......... 04F6'  CFWAIT ........... 04E8'
CF_8BIT .......... 0001   CF_COMMAND ....... 0017   CF_CYL_HI ........ 0015 
CF_CYL_LOW ....... 0014   CF_DATA .......... 0010   CF_ERROR ......... 0011 
CF_FEATURES ...... 0011   CF_HEAD .......... 0016   CF_LBA0 .......... 0013 
CF_LBA1 .......... 0014   CF_LBA2 .......... 0015   CF_LBA3 .......... 0016 
CF_NOCACHE ....... 0082   CF_READ_SEC ...... 0020   CF_SECCOUNT ...... 0012 
CF_SECTOR ........ 0013   CF_SET_FEAT ...... 00EF   CF_STATUS ........ 0017 
CF_WRITE_SEC ..... 0030   CHGDSK ........... 032C'  CHKUNA ........... 0375'
CNT1SEC .......... 04F8'  CNTLA0 ........... 00C0   CNTLA1 ........... 00C1 
CNTLB0 ........... 00C2   CNTLB1 ........... 00C3   CNTR ............. 00CA 
COLDSTART ........ 0072'  COMMONBASE ....... 004B'  CONIN ............ 01BC'
CONOUT ........... 01C3'  CONOUTA .......... 01A8'  CONST ............ 01B5'
CPMSPT ........... 0080   CR ............... 000D   CREATE ........... 0090 
DAR0B ............ 00E5   DAR0H ............ 00E4   DAR0L ............ 00E3 
DCNTL ............ 00F2   DEBUG ............ 0000   DEVOK ............ 0259'
DEVTBL ........... 025C'  DIRBUF ........... 0527'  DMAADR ........... 15D0'
DMODE ............ 00F1   DPB .............. 0186'  DPB0 ............. 0177'
DPBASE ........... 0077'  DPBLAST .......... 0195'  DSPTCH ........... 008E 
DSTAT ............ 00F0   ERFLAG ........... 15CC'  EXITREGION ....... 028D'
FALSE ............ 0000   FILHST ........... 03F1'  FLAGSET .......... 0085 
FLAGWAIT ......... 0084   FRC .............. 00D8   HOME ............. 02F9'
HOMED ............ 0302'  HSTACT ........... 15C5'  HSTBLK ........... 0004 
HSTBUF ........... 15D2'  HSTDSK ........... 15C0'  HSTSEC ........... 15C3'
HSTSIZ ........... 0200   HSTSPT ........... 0020   HSTTRK ........... 15C1'
HSTWRT ........... 15C6'  IAR1H ............ 00EC   IAR1L ............ 00EB 
ICR .............. 00FF   IL ............... 00F3   INIB2 ............ 0562'
INTDONE .......... 02CE'  INTSTK ........... 04FA'  ITBL ............. 0060'
ITC .............. 00F4   LBA0 ............. 15B7'  LBA1 ............. 15B8'
LBA2 ............. 15B9'  LBA3 ............. 15BA'  LF ............... 000A 
LIST ............. 0246'  LISTST ........... 0244'  LOCALDATA ........ 0527'
LPTOUT ........... 0246'  LPTRDY ........... 024B'  LSTINTSTK ........ 0522'
MAKEQUE .......... 0086   MAR1B ............ 00EA   MAR1H ............ 00E9 
MAR1L ............ 00E8   MATCH ............ 040E'  MAXCONSOLE ....... 024F'
NOMATCH .......... 03EA'  NOOVF ............ 03AB'  NOTICKN .......... 02BF'
NUMCNS ........... 0002   NUMDEV ........... 0005   OMCR ............. 00FE 
PDISP ............ 0054'  PIOAC ............ 004E   PIOAD ............ 004C 
PIOBC ............ 004F   PIOBD ............ 004D   PLCI0 ............ 0001 
PLCI1 ............ 0003   PLCO0 ............ 0002   PLCO1 ............ 0004 
PLDSK ............ 0000   POLCI0 ........... 01DC'  POLCI1 ........... 0210'
POLCO0 ........... 0207'  POLCO1 ........... 023B'  POLDSK ........... 0268'
POLL ............. 0083   POLLDEVICE ....... 0252'  PREEMP ........... 0525'
PT0IN ............ 01E5'  PT0OUT ........... 01F2'  PT0ST ............ 01DC'
PT1IN ............ 0219'  PT1OUT ........... 0226'  PT1ST ............ 0210'
PTBLJMP .......... 01CA'  PUTMSG ........... 01A4'  RCR .............. 00F6 
RDR0 ............. 00C8   RDR1 ............. 00C9   READ ............. 033F'
READHST .......... 04A2'  READOP ........... 15CE'  READQUE .......... 0089 
RELOAD ........... 4800   RLDR0H ........... 00CF   RLDR0L ........... 00CE 
ZSM 4.4	Source file: XIOS     	14-Apr-2022  18:03:20	Page   22

RLDR1H ........... 00D7   RLDR1L ........... 00D6   RSFLAG ........... 15CD'
RTNEMPTY ......... 01CF'  RWMOVE ........... 042C'  RWOPER ........... 03B9'
SAR0B ............ 00E2   SAR0H ............ 00E1   SAR0L ............ 00E0 
SAVSP ............ 0522'  SECMSK ........... 0003   SECTRAN .......... 030F'
SEKDSK ........... 15BB'  SEKHST ........... 15C4'  SEKSEC ........... 15BE'
SEKTRK ........... 15BC'  SEKTRKCMP ........ 0453'  SELBANK .......... 0276'
SELDSK ........... 0317'  SELMEMORY ........ 0272'  SETDMA ........... 0312'
SETLBAADR ........ 045F'  SETSEC ........... 030A'  SETTRK ........... 0305'
SL1 .............. 0496'  SL2 .............. 049D'  STARTCLOCK ....... 0282'
STAT0 ............ 00C4   STAT1 ............ 00C5   STOPCLOCK ........ 0288'
ST_RDRF .......... 0007   ST_TDRE .......... 0001   SWTSYS ........... 0051'
SWTUSER .......... 004E'  SYSDAT ........... 005A'  SYSTEMINIT ....... 0527'
TBLJMP ........... 01D1'  TCR .............. 00D0   TDR0 ............. 00C6 
TDR1 ............. 00C7   TICKN ............ 0524'  TICKSPSEC ........ 0032 
TIMDBG ........... 04F9'  TIMERINT ......... 0294'  TMDR0H ........... 00CD 
TMDR0L ........... 00CC   TMDR1H ........... 00D5   TMDR1L ........... 00D4 
TPABUF ........... 0080   TRDR ............. 00CB   TRUE ............. FFFF 
TX0RDY ........... 0202'  TX1RDY ........... 0236'  UNACNT ........... 15C7'
UNADSK ........... 15C8'  UNASEC ........... 15CB'  UNATRK ........... 15C9'
USERDRV .......... 0526'  VASC0 ............ 000E   VASC1 ............ 0010 
VCSIO ............ 000C   VDMA0 ............ 0008   VDMA1 ............ 000A 
VINT1 ............ 0000   VINT2 ............ 0002   VPRT0 ............ 0004 
VPRT1 ............ 0006   WARMSTART ........ 0072'  WBOOT ............ 0003'
WELCOME .......... 059B'  WRALL ............ 0000   WRDIR ............ 0001 
WRITE ............ 0352'  WRITEHST ......... 04C5'  WRITEQUE ......... 008B 
WRTYPE ........... 15CF'  WRUAL ............ 0002   XDELAY ........... 008D 
XDOS ............. 0057'  XIOS ............. 0000'  
